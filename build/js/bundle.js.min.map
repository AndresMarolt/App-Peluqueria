{"version":3,"sources":["app.js"],"names":["pagina","cita","nombre","fecha","hora","servicios","iniciarApp","mostrarServicios","mostrarSeccion","cambiarSeccion","paginaSiguiente","paginaAnterior","botonesPaginador","mostrarResumen","nombreCita","fechaCita","deshabilitarFechaAnterior","horaCita","seccionAnterior","document","querySelector","classList","remove","add","tabAnterior","querySelectorAll","forEach","enlace","addEventListener","e","preventDefault","parseInt","target","dataset","paso","async","resultado","fetch","bd","json","servicio","id","precio","nombreServicio","createElement","textContent","precioServicio","servicioDiv","onclick","seleccionarServicio","appendChild","idServicio","error","console","log","elemento","tagName","parentElement","contains","eliminarServicio","agregarServicio","firstElementChild","nextElementSibling","filter","servicioObj","resumenDiv","firstChild","removeChild","Object","values","includes","noServicios","headingCita","innerHTML","serviciosCita","headingServicios","cantidad","contenedorServicio","textoServicio","totalServicio","split","trim","precioTotal","nombreTexto","value","length","mostrarAlerta","alerta","mensaje","tipo","setTimeout","fechaInput","dia","Date","getUTCDay","inputFecha","fechaActual","year","getFullYear","setDate","getDate","mes","getMonth","fechaDeshabilitar","min","inputHora"],"mappings":"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","file":"bundle.js","sourcesContent":["let pagina = 1;\r\nconst cita = {\r\n    nombre: '',\r\n    fecha: '',\r\n    hora: '',\r\n    servicios: []\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    iniciarApp();\r\n});\r\n\r\nfunction iniciarApp() {         // FUNCION QUE SE VA A ENCARGAR DE INICIAR OTRAS FUNCIONES\r\n    mostrarServicios();\r\n\r\n    // Resalta el DIV actual según la tab que se presione\r\n    mostrarSeccion();\r\n\r\n    // Oculta o muestra una sección según la tab que se presione\r\n    cambiarSeccion();\r\n\r\n    // Paginación siguiente y anterior\r\n    paginaSiguiente();\r\n    paginaAnterior();\r\n\r\n    // Comprueba la página actual para ocultar o mostrar la paginación\r\n    botonesPaginador();\r\n\r\n    // Muestra el resúmen de la cita o mensaje de error en caso de no pasar la validación:\r\n    mostrarResumen();\r\n\r\n    // Almacena el nombre de la cita en el objeto\r\n    nombreCita();\r\n\r\n    // Almacena la fecha de la cita en el objeto\r\n    fechaCita();\r\n\r\n    // Deshabilita días pasados:\r\n    deshabilitarFechaAnterior();\r\n\r\n    // Almacena la hora de la cita en el objeto\r\n    horaCita();\r\n\r\n\r\n\r\n}\r\n\r\nfunction mostrarSeccion() {\r\n\r\n    const seccionAnterior = document.querySelector('.mostrar-seccion');\r\n    if(seccionAnterior) {\r\n        seccionAnterior.classList.remove('mostrar-seccion');\r\n    }\r\n\r\n\r\n    const seccionActual = document.querySelector(`#paso-${pagina}`);\r\n    seccionActual.classList.add('mostrar-seccion');\r\n\r\n\r\n    const tabAnterior = document.querySelector('.tabs .actual');\r\n    if(tabAnterior) {\r\n        tabAnterior.classList.remove('actual');\r\n    }\r\n\r\n\r\n    // Resalta el tab actual\r\n    const tab = document.querySelector(`[data-paso=\"${pagina}\"]`);\r\n    tab.classList.add('actual');\r\n}\r\n\r\nfunction cambiarSeccion() {\r\n    const enlaces = document.querySelectorAll('.tabs button');\r\n\r\n    enlaces.forEach( enlace => {\r\n        enlace.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            pagina = parseInt(e.target.dataset.paso);\r\n\r\n            // Llamar la función de Mostrar Sección\r\n            mostrarSeccion();\r\n            botonesPaginador();\r\n        })\r\n    })\r\n}\r\n\r\nasync function mostrarServicios() {\r\n    try {\r\n        const resultado = await fetch('./servicios.json');\r\n        const bd = await resultado.json();          // Indica qué tipo de respuesta es; si fuese texto en vez de un archivo .json sería resultado.text()\r\n\r\n        const { servicios } = bd; // Equivale a:    const servicios = bd.servicios;\r\n        \r\n        // Generar el HTML\r\n        servicios.forEach( servicio => {\r\n\r\n            const { id, nombre, precio } = servicio;\r\n\r\n            // DOM SCRIPTING:\r\n\r\n            // Generar nombre de servicio:\r\n            const nombreServicio = document.createElement('P');\r\n            nombreServicio.textContent = nombre;\r\n            nombreServicio.classList.add('nombre-servicio');\r\n\r\n            // Generar precio de servicio:\r\n            const precioServicio = document.createElement('P');\r\n            precioServicio.textContent = `$ ${precio}`;\r\n            precioServicio.classList.add('precio-servicio');\r\n\r\n            // Generar DIV contenedor de servicios\r\n            const servicioDiv = document.createElement('DIV');\r\n            servicioDiv.classList.add('servicio');\r\n\r\n            // Seleccionar un servicio para la cita\r\n            servicioDiv.onclick = seleccionarServicio;\r\n\r\n            //Inyectar precio y nombre al DIV de servicio\r\n            servicioDiv.appendChild(nombreServicio);\r\n            servicioDiv.appendChild(precioServicio);\r\n            servicioDiv.dataset.idServicio = id;    // Hace que al DIV se le asigne el atributo \"data-id-servicio\". Ej: data-id-servicio = 1\r\n\r\n            // Inyectarlo en el HTML\r\n            document.querySelector('#servicios').appendChild(servicioDiv);\r\n        })\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nfunction seleccionarServicio(e) {\r\n    let elemento;\r\n\r\n    // Forzar que el elemento al cual le demos click sea al DIV:\r\n    if(e.target.tagName === 'P') {\r\n        elemento = e.target.parentElement;\r\n    } else {\r\n        elemento = e.target;\r\n    }\r\n\r\n    // Si el DIV clickeado no estaba seleccionado se va a seleccionar. Si ya lo estaba se lo deselecciona:\r\n    if(elemento.classList.contains('seleccionado') ) {\r\n        elemento.classList.remove('seleccionado');\r\n\r\n        const id = parseInt(elemento.dataset.idServicio);\r\n        eliminarServicio(id);\r\n    } else {\r\n        elemento.classList.add('seleccionado');\r\n\r\n        const servicioObj = {\r\n            id: parseInt(elemento.dataset.idServicio),\r\n            nombre: elemento.firstElementChild.textContent,\r\n            precio: elemento.firstElementChild.nextElementSibling.textContent\r\n        }\r\n        //console.log(servicioObj);\r\n        agregarServicio(servicioObj);\r\n    }\r\n}\r\n\r\nfunction eliminarServicio(id) {\r\n    const {servicios} = cita;\r\n    cita.servicios = servicios.filter(servicio => servicio.id !== id);\r\n\r\n    console.log(cita);\r\n}\r\n\r\nfunction agregarServicio(servicioObj) {\r\n    const {servicios} = cita;\r\n    cita.servicios = [...servicios, servicioObj];       // Hace que los servicios se vayan añadiendo al array de cita.servicios\r\n    console.log(cita);\r\n\r\n}\r\n\r\n\r\nfunction paginaSiguiente() {\r\n    const paginaSiguiente = document.querySelector('#siguiente');\r\n    paginaSiguiente.addEventListener('click', () => {\r\n        pagina++;\r\n\r\n        console.log(pagina);\r\n\r\n        botonesPaginador();         // Llama a esta funcion para revisar en qué página está y si corresponde o no borrar el boton de atrás o siguiente\r\n    });\r\n}\r\n\r\nfunction paginaAnterior() {\r\n    const paginaAnterior = document.querySelector('#anterior');\r\n    paginaAnterior.addEventListener('click', () => {\r\n        pagina--;\r\n\r\n        console.log(pagina);\r\n\r\n        botonesPaginador();         // Llama a esta funcion para revisar en qué página está y si corresponde o no borrar el boton de atrás o siguiente\r\n    });\r\n}\r\n\r\nfunction botonesPaginador() {\r\n    const paginaAnterior = document.querySelector('#anterior');\r\n    const paginaSiguiente = document.querySelector('#siguiente');\r\n\r\n    if(pagina === 1) {\r\n        paginaAnterior.classList.add('ocultar');\r\n    } else if(pagina === 3) {\r\n        paginaSiguiente.classList.add('ocultar');\r\n        paginaAnterior.classList.remove('ocultar');\r\n\r\n        mostrarResumen();   // Estamos en la página 3; Carga el resumen de la cita \r\n    } else {\r\n        paginaAnterior.classList.remove('ocultar');\r\n        paginaSiguiente.classList.remove('ocultar');\r\n    }\r\n\r\n    mostrarSeccion();   // Cambia la sección que se muestra por la de la página actual\r\n}\r\n\r\nfunction mostrarResumen() {\r\n    // Destructuring\r\n    const {nombre, fecha, hora, servicios} = cita;\r\n\r\n\r\n    // Seleccionar el resúmen:\r\n    const resumenDiv = document.querySelector('.contenido-resumen');\r\n\r\n    // Limpia el HTML previo:\r\n    while(resumenDiv.firstChild) {  // Mientras que el elemento de la clase .contenido-resumen tenga contenido en él...\r\n        resumenDiv.removeChild(resumenDiv.firstChild);\r\n    }\r\n\r\n    // Validación de objeto:\r\n    if(Object.values(cita).includes('')) {\r\n        const noServicios = document.createElement('P');\r\n        noServicios.textContent = \"Faltan datos de servicios, fecha, hora o nombre\";\r\n\r\n        noServicios.classList.add('invalidar-cita');\r\n\r\n        // Agregar a resumenDiv:\r\n        resumenDiv.appendChild(noServicios);\r\n\r\n        return;\r\n    } \r\n\r\n    // Mostrar el resumen:\r\n\r\n    const headingCita = document.createElement('H3');\r\n    headingCita.textContent = \"Resumen de cita\";\r\n\r\n    const nombreCita = document.createElement('P');\r\n    nombreCita.innerHTML = `<span>Nombre:</span> ${nombre}`;\r\n\r\n    const fechaCita = document.createElement('P');\r\n    fechaCita.innerHTML = `<span>Fecha:</span> ${fecha}`;\r\n\r\n    const horaCita = document.createElement('P');\r\n    horaCita.innerHTML = `<span>Hora:</span> ${hora}`;\r\n\r\n    const serviciosCita = document.createElement('DIV');            // (DIV) serviciosCita\r\n    serviciosCita.classList.add('resumen-servicios');\r\n\r\n    const headingServicios = document.createElement('H3');\r\n    headingServicios.textContent = \"Resumen de servicios\";\r\n\r\n    serviciosCita.appendChild(headingServicios);\r\n\r\n    let cantidad = 0;\r\n\r\n    // Iterar sobre el array de servicios\r\n    servicios.forEach( servicio => {\r\n\r\n        const {nombre, precio} = servicio;\r\n        const contenedorServicio = document.createElement('DIV');\r\n        contenedorServicio.classList.add('contenedor-servicios');\r\n\r\n        const textoServicio = document.createElement('P');\r\n        textoServicio.textContent = nombre;\r\n\r\n        const precioServicio = document.createElement('P');\r\n        precioServicio.textContent = precio;\r\n        precioServicio.classList.add('precio');\r\n\r\n        const totalServicio = precio.split('$');\r\n        cantidad += parseInt(totalServicio[1].trim());\r\n\r\n        // Colocar texto y precio en el DIV\r\n        contenedorServicio.appendChild(textoServicio);\r\n        contenedorServicio.appendChild(precioServicio);\r\n\r\n        serviciosCita.appendChild(contenedorServicio);              // (DIV) serviciosCita -> (DIV) contenedorServicio\r\n\r\n        console.log(textoServicio);\r\n    });\r\n\r\n    console.log(cantidad);\r\n\r\n    resumenDiv.appendChild(headingCita);\r\n    resumenDiv.appendChild(nombreCita);\r\n    resumenDiv.appendChild(fechaCita);\r\n    resumenDiv.appendChild(horaCita);\r\n\r\n    resumenDiv.appendChild(serviciosCita);                          // (DIV) resumenDiv -> (DIV) serviciosCita -> (DIV) contenedorServicio\r\n    \r\n    const precioTotal = document.createElement('P');\r\n    precioTotal.classList.add('total');\r\n    precioTotal.innerHTML = `<span>Total a Pagar: </span> $${cantidad}`;\r\n\r\n    resumenDiv.appendChild(precioTotal);\r\n}\r\n\r\nfunction nombreCita() {\r\n    const nombreInput = document.querySelector('#nombre');\r\n    nombreInput.addEventListener('change', e => {\r\n        const nombreTexto = e.target.value.trim();\r\n\r\n        // Verifica que nombreTexto tenga algo:\r\n        if(nombreTexto==='' || nombreTexto.length < 3) {\r\n            mostrarAlerta('Nombre no válido', 'error');\r\n        } else {\r\n            const alerta = document.querySelector('.alerta');\r\n            if(alerta) {\r\n                alerta.remove();\r\n            }\r\n            cita.nombre = nombreTexto;\r\n\r\n            console.log(cita);\r\n        }\r\n    })\r\n}\r\n\r\nfunction mostrarAlerta(mensaje, tipo) {\r\n    \r\n    // Si hay una alerta previa no crear otra:\r\n    const alertaPrevia = document.querySelector('.alerta');\r\n    if(alertaPrevia) {\r\n        return;                 // Este return finaliza la función mostrarAlerta() en este punto. No se ejecuta lo de abajo\r\n    }\r\n\r\n    const alerta = document.createElement('DIV');\r\n    alerta.textContent = mensaje;\r\n    alerta.classList.add('alerta');\r\n\r\n    if(tipo==='error') {\r\n        alerta.classList.add('error');\r\n    }\r\n\r\n    // Insertar en el HTML:\r\n    const formulario = document.querySelector('.formulario');\r\n    formulario.appendChild( alerta );\r\n\r\n    // Eliminar la alerta después de 3 segundos:\r\n    setTimeout(() => {\r\n        alerta.remove();\r\n    }, 3000);\r\n}\r\n\r\nfunction fechaCita() {\r\n    const fechaInput = document.querySelector('#fecha');\r\n    fechaInput.addEventListener('change', (e) => {\r\n        const dia = new Date (e.target.value).getUTCDay(); // Date convierte el string a formato de fecha. El método getUTCDate() retorna el número del día del 0 al 6 (0 es domingo, lunes 1, martes 2, etc).\r\n\r\n        if([0, 6].includes(dia)) {\r\n            e.preventDefault();         // Hace que en caso de que elijamos un día de fin de semana esta fecha no se ponga en el campo.\r\n            fechaInput.value = '';      // En lugar de la fecha ilegal elegida, el campo va a quedar vacío.\r\n            mostrarAlerta('Sólo válido de Lunes a Viernes', 'error');\r\n        } else {\r\n            cita.fecha = fechaInput.value;\r\n\r\n            console.log(cita);\r\n        }\r\n    }) \r\n}\r\n\r\nfunction deshabilitarFechaAnterior(){\r\n    const inputFecha = document.querySelector('#fecha');\r\n    const fechaActual =  new Date();\r\n    const year =  fechaActual.getFullYear();\r\n \r\n   // suma un día a la fecha actual sin inconvenientes, por ejemplo, si el \r\n   //día actual es 31 de marzo y se le suma un día, la fecha sería 1 de abril\r\n   fechaActual.setDate(fechaActual.getDate() + 1);\r\n \r\n   let dia = fechaActual.getDate();\r\n   let mes = fechaActual.getMonth()+1;\r\n\r\n   if(mes < 10) {\r\n      mes = `0${mes}`;\r\n   }\r\n   if(dia < 10) {\r\n      dia = `0${dia}`;\r\n   }\r\n \r\n   // Formato de la fecha minima AAAA-MM-DD \r\n   let fechaDeshabilitar = `${year}-${mes}-${dia}`;\r\n \r\n   inputFecha.min = fechaDeshabilitar;\r\n}\r\n\r\nfunction horaCita() {\r\n    const inputHora = document.querySelector('#hora');\r\n    inputHora.addEventListener('change', e => {\r\n\r\n        const horaCita = e.target.value;\r\n        const hora = horaCita.split(':');      // .split(':') divide al string (por ejemplo 11:00) a partir de los dos puntos, quedando 11 por un lado y 00 por el otro\r\n\r\n        if(hora[0] < 10 || hora[0] > 18) {      // hora[0] va a ser la hora, y hora[1] los minutos\r\n            mostrarAlerta('Hora no válida', 'error');\r\n            setTimeout(() => {\r\n                inputHora.value = '';               // Para que el campo quede vacío si se elige una hora no válida\r\n            }, 1500);\r\n            \r\n        } else {\r\n            cita.hora = horaCita;\r\n\r\n            console.log(cita);\r\n        }\r\n    })\r\n}"]}